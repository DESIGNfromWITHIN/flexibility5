<?php return array (
  'unique_key' => 'category',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'Snippets' => 
    array (
      'b6fb4d17d5cc7abead3f4620cc4a66d6' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":0,"source":0,"property_preprocess":0,"name":"FormIt","description":"A dynamic form processing snippet.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * FormIt\\n *\\n * A dynamic form processing Snippet for MODx Revolution.\\n *\\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\',null,MODX_CORE_PATH).\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n$fi->initialize($modx->context->get(\'key\'));\\n$fi->loadRequest();\\n\\n$fields = $fi->request->prepare();\\nreturn $fi->request->handle($fields);","locked":0,"properties":"a:57:{s:5:\\"hooks\\";a:7:{s:4:\\"name\\";s:5:\\"hooks\\";s:4:\\"desc\\";s:22:\\"prop_formit.hooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"preHooks\\";a:7:{s:4:\\"name\\";s:8:\\"preHooks\\";s:4:\\"desc\\";s:25:\\"prop_formit.prehooks_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"submitVar\\";a:7:{s:4:\\"name\\";s:9:\\"submitVar\\";s:4:\\"desc\\";s:26:\\"prop_formit.submitvar_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"validate\\";a:7:{s:4:\\"name\\";s:8:\\"validate\\";s:4:\\"desc\\";s:25:\\"prop_formit.validate_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"errTpl\\";a:7:{s:4:\\"name\\";s:6:\\"errTpl\\";s:4:\\"desc\\";s:23:\\"prop_formit.errtpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:37:\\"<span class=\\"error\\">[[+error]]<\\/span>\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"validationErrorMessage\\";a:7:{s:4:\\"name\\";s:22:\\"validationErrorMessage\\";s:4:\\"desc\\";s:39:\\"prop_formit.validationerrormessage_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:96:\\"<p class=\\"error\\">A form validation error occurred. Please check the values you have entered.<\\/p>\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:22:\\"validationErrorBulkTpl\\";a:7:{s:4:\\"name\\";s:22:\\"validationErrorBulkTpl\\";s:4:\\"desc\\";s:39:\\"prop_formit.validationerrorbulktpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:19:\\"<li>[[+error]]<\\/li>\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:26:\\"trimValuesBeforeValidation\\";a:7:{s:4:\\"name\\";s:26:\\"trimValuesBeforeValidation\\";s:4:\\"desc\\";s:43:\\"prop_formit.trimvaluesdeforevalidation_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"customValidators\\";a:7:{s:4:\\"name\\";s:16:\\"customValidators\\";s:4:\\"desc\\";s:33:\\"prop_formit.customvalidators_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"clearFieldsOnSuccess\\";a:7:{s:4:\\"name\\";s:20:\\"clearFieldsOnSuccess\\";s:4:\\"desc\\";s:37:\\"prop_formit.clearfieldsonsuccess_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"successMessage\\";a:7:{s:4:\\"name\\";s:14:\\"successMessage\\";s:4:\\"desc\\";s:31:\\"prop_formit.successmessage_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:25:\\"successMessagePlaceholder\\";a:7:{s:4:\\"name\\";s:25:\\"successMessagePlaceholder\\";s:4:\\"desc\\";s:42:\\"prop_formit.successmessageplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:17:\\"fi.successMessage\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:5:\\"store\\";a:7:{s:4:\\"name\\";s:5:\\"store\\";s:4:\\"desc\\";s:22:\\"prop_formit.store_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:34:\\"prop_formit.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"fi.\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"storeTime\\";a:7:{s:4:\\"name\\";s:9:\\"storeTime\\";s:4:\\"desc\\";s:26:\\"prop_formit.storetime_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:300;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"allowFiles\\";a:7:{s:4:\\"name\\";s:10:\\"allowFiles\\";s:4:\\"desc\\";s:27:\\"prop_formit.allowfiles_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"spamEmailFields\\";a:7:{s:4:\\"name\\";s:15:\\"spamEmailFields\\";s:4:\\"desc\\";s:32:\\"prop_formit.spamemailfields_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"email\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"spamCheckIp\\";a:7:{s:4:\\"name\\";s:11:\\"spamCheckIp\\";s:4:\\"desc\\";s:28:\\"prop_formit.spamcheckip_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"recaptchaJs\\";a:7:{s:4:\\"name\\";s:11:\\"recaptchaJs\\";s:4:\\"desc\\";s:28:\\"prop_formit.recaptchajs_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:2:\\"{}\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"recaptchaTheme\\";a:7:{s:4:\\"name\\";s:14:\\"recaptchaTheme\\";s:4:\\"desc\\";s:31:\\"prop_formit.recaptchatheme_desc\\";s:4:\\"type\\";s:4:\\"list\\";s:7:\\"options\\";a:4:{i:0;a:2:{s:4:\\"text\\";s:14:\\"formit.opt_red\\";s:5:\\"value\\";s:3:\\"red\\";}i:1;a:2:{s:4:\\"text\\";s:16:\\"formit.opt_white\\";s:5:\\"value\\";s:5:\\"white\\";}i:2;a:2:{s:4:\\"text\\";s:16:\\"formit.opt_clean\\";s:5:\\"value\\";s:5:\\"clean\\";}i:3;a:2:{s:4:\\"text\\";s:21:\\"formit.opt_blackglass\\";s:5:\\"value\\";s:10:\\"blackglass\\";}}s:5:\\"value\\";s:5:\\"clean\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"redirectTo\\";a:7:{s:4:\\"name\\";s:10:\\"redirectTo\\";s:4:\\"desc\\";s:27:\\"prop_formit.redirectto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:14:\\"redirectParams\\";a:7:{s:4:\\"name\\";s:14:\\"redirectParams\\";s:4:\\"desc\\";s:31:\\"prop_formit.redirectparams_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"emailTo\\";a:7:{s:4:\\"name\\";s:7:\\"emailTo\\";s:4:\\"desc\\";s:24:\\"prop_formit.emailto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"emailToName\\";a:7:{s:4:\\"name\\";s:11:\\"emailToName\\";s:4:\\"desc\\";s:28:\\"prop_formit.emailtoname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"emailFrom\\";a:7:{s:4:\\"name\\";s:9:\\"emailFrom\\";s:4:\\"desc\\";s:26:\\"prop_formit.emailfrom_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"emailFromName\\";a:7:{s:4:\\"name\\";s:13:\\"emailFromName\\";s:4:\\"desc\\";s:30:\\"prop_formit.emailfromname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailReplyTo\\";a:7:{s:4:\\"name\\";s:12:\\"emailReplyTo\\";s:4:\\"desc\\";s:29:\\"prop_formit.emailreplyto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:16:\\"emailReplyToName\\";a:7:{s:4:\\"name\\";s:16:\\"emailReplyToName\\";s:4:\\"desc\\";s:33:\\"prop_formit.emailreplytoname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"emailCC\\";a:7:{s:4:\\"name\\";s:7:\\"emailCC\\";s:4:\\"desc\\";s:24:\\"prop_formit.emailcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"emailCCName\\";a:7:{s:4:\\"name\\";s:11:\\"emailCCName\\";s:4:\\"desc\\";s:28:\\"prop_formit.emailccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"emailBCC\\";a:7:{s:4:\\"name\\";s:8:\\"emailBCC\\";s:4:\\"desc\\";s:25:\\"prop_formit.emailbcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailBCCName\\";a:7:{s:4:\\"name\\";s:12:\\"emailBCCName\\";s:4:\\"desc\\";s:29:\\"prop_formit.emailbccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"emailReturnPath\\";a:7:{s:4:\\"name\\";s:15:\\"emailReturnPath\\";s:4:\\"desc\\";s:32:\\"prop_formit.emailreturnpath_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"emailSubject\\";a:7:{s:4:\\"name\\";s:12:\\"emailSubject\\";s:4:\\"desc\\";s:29:\\"prop_formit.emailsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:23:\\"emailUseFieldForSubject\\";a:7:{s:4:\\"name\\";s:23:\\"emailUseFieldForSubject\\";s:4:\\"desc\\";s:40:\\"prop_formit.emailusefieldforsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"emailHtml\\";a:7:{s:4:\\"name\\";s:9:\\"emailHtml\\";s:4:\\"desc\\";s:26:\\"prop_formit.emailhtml_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"emailConvertNewlines\\";a:7:{s:4:\\"name\\";s:20:\\"emailConvertNewlines\\";s:4:\\"desc\\";s:37:\\"prop_formit.emailconvertnewlines_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"emailMultiWrapper\\";a:7:{s:4:\\"name\\";s:17:\\"emailMultiWrapper\\";s:4:\\"desc\\";s:34:\\"prop_formit.emailmultiwrapper_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:10:\\"[[+value]]\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:19:\\"emailMultiSeparator\\";a:7:{s:4:\\"name\\";s:19:\\"emailMultiSeparator\\";s:4:\\"desc\\";s:36:\\"prop_formit.emailmultiseparator_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"fiarTpl\\";a:7:{s:4:\\"name\\";s:7:\\"fiarTpl\\";s:4:\\"desc\\";s:22:\\"prop_fiar.fiartpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarToField\\";a:7:{s:4:\\"name\\";s:11:\\"fiarToField\\";s:4:\\"desc\\";s:26:\\"prop_fiar.fiartofield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:5:\\"email\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarSubject\\";a:7:{s:4:\\"name\\";s:11:\\"fiarSubject\\";s:4:\\"desc\\";s:26:\\"prop_fiar.fiarsubject_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:30:\\"[[++site_name]] Auto-Responder\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fiarFrom\\";a:7:{s:4:\\"name\\";s:8:\\"fiarFrom\\";s:4:\\"desc\\";s:23:\\"prop_fiar.fiarfrom_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"fiarFromName\\";a:7:{s:4:\\"name\\";s:12:\\"fiarFromName\\";s:4:\\"desc\\";s:27:\\"prop_fiar.fiarfromname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarReplyTo\\";a:7:{s:4:\\"name\\";s:11:\\"fiarReplyTo\\";s:4:\\"desc\\";s:26:\\"prop_fiar.fiarreplyto_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:15:\\"fiarReplyToName\\";a:7:{s:4:\\"name\\";s:15:\\"fiarReplyToName\\";s:4:\\"desc\\";s:30:\\"prop_fiar.fiarreplytoname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:6:\\"fiarCC\\";a:7:{s:4:\\"name\\";s:6:\\"fiarCC\\";s:4:\\"desc\\";s:21:\\"prop_fiar.fiarcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"fiarCCName\\";a:7:{s:4:\\"name\\";s:10:\\"fiarCCName\\";s:4:\\"desc\\";s:25:\\"prop_fiar.fiarccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"fiarBCC\\";a:7:{s:4:\\"name\\";s:7:\\"fiarBCC\\";s:4:\\"desc\\";s:22:\\"prop_fiar.fiarbcc_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"fiarBCCName\\";a:7:{s:4:\\"name\\";s:11:\\"fiarBCCName\\";s:4:\\"desc\\";s:26:\\"prop_fiar.fiarbccname_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:8:\\"fiarHtml\\";a:7:{s:4:\\"name\\";s:8:\\"fiarHtml\\";s:4:\\"desc\\";s:23:\\"prop_fiar.fiarhtml_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathMinRange\\";a:7:{s:4:\\"name\\";s:12:\\"mathMinRange\\";s:4:\\"desc\\";s:27:\\"prop_math.mathminrange_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:10;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathMaxRange\\";a:7:{s:4:\\"name\\";s:12:\\"mathMaxRange\\";s:4:\\"desc\\";s:27:\\"prop_math.mathmaxrange_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";i:100;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:9:\\"mathField\\";a:7:{s:4:\\"name\\";s:9:\\"mathField\\";s:4:\\"desc\\";s:24:\\"prop_math.mathfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:4:\\"math\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathOp1Field\\";a:7:{s:4:\\"name\\";s:12:\\"mathOp1Field\\";s:4:\\"desc\\";s:27:\\"prop_math.mathop1field_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"op1\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"mathOp2Field\\";a:7:{s:4:\\"name\\";s:12:\\"mathOp2Field\\";s:4:\\"desc\\";s:27:\\"prop_math.mathop2field_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"op2\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"mathOperatorField\\";a:7:{s:4:\\"name\\";s:17:\\"mathOperatorField\\";s:4:\\"desc\\";s:32:\\"prop_math.mathoperatorfield_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"operator\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * FormIt\\n *\\n * A dynamic form processing Snippet for MODx Revolution.\\n *\\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\',null,MODX_CORE_PATH).\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n$fi->initialize($modx->context->get(\'key\'));\\n$fi->loadRequest();\\n\\n$fields = $fi->request->prepare();\\nreturn $fi->request->handle($fields);"}',
        'guid' => '5e7dcf106ed77c8c4f239850f9c95de3',
        'native_key' => 0,
        'signature' => '0f9fb7b0b9fdc029de0f88eb96b165c8',
      ),
      '4a6342b57397329524c253d0a4c2076e' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"FormItAutoResponder","description":"Custom hook for FormIt to handle Auto-Response emails.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for auto-responders.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'fiarTpl\',$scriptProperties,\'fiarTpl\');\\n$mailFrom = $modx->getOption(\'fiarFrom\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailFromName = $modx->getOption(\'fiarFromName\',$scriptProperties,$modx->getOption(\'site_name\'));\\n$mailSender = $modx->getOption(\'fiarSender\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailSubject = $modx->getOption(\'fiarSubject\',$scriptProperties,\'[[++site_name]] Auto-Responder\');\\n$mailSubject = str_replace(array(\'[[++site_name]]\',\'[[++emailsender]]\'),array($modx->getOption(\'site_name\'),$modx->getOption(\'emailsender\')),$mailSubject);\\n$fiarFiles = $modx->getOption(\'fiarFiles\',$scriptProperties,false);\\n$isHtml = $modx->getOption(\'fiarHtml\',$scriptProperties,true);\\n$toField = $modx->getOption(\'fiarToField\',$scriptProperties,\'email\');\\n$multiSeparator = $modx->getOption(\'fiarMultiSeparator\',$formit->config,\\"\\\\n\\");\\n$multiWrapper = $modx->getOption(\'fiarMultiWrapper\',$formit->config,\\"[[+value]]\\");\\nif (empty($fields[$toField])) {\\n    $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] Auto-responder could not find field `\'.$toField.\'` in form submission.\');\\n    return false;\\n}\\n\\n\\/* handle checkbox and array fields *\\/\\nforeach ($fields as $k => &$v) {\\n    if (is_array($v) && !empty($v[\'name\']) && isset($v[\'error\']) && $v[\'error\'] == UPLOAD_ERR_OK) {\\n        $fields[$k] = $v[\'name\'];\\n    } else if (is_array($v)) {\\n        $vOpts = array();\\n        foreach ($v as $vKey => $vValue) {\\n            if (is_string($vKey) && !empty($vKey)) {\\n                $vKey = $k.\'.\'.$vKey;\\n                $fields[$vKey] = $vValue;\\n            } else {\\n                $vOpts[] = str_replace(\'[[+value]]\',$vValue,$multiWrapper);\\n            }\\n        }\\n        $newValue = implode($multiSeparator,$vOpts);\\n        if (!empty($vOpts)) {\\n            $fields[$k] = $newValue;\\n        }\\n    }\\n}\\n\\n\\/* setup placeholders *\\/\\n$placeholders = $fields;\\n$mailTo= $fields[$toField];\\n\\n$message = $formit->getChunk($tpl,$placeholders);\\n$modx->parser->processElementTags(\'\',$message,true,false);\\n\\n$modx->getService(\'mail\', \'mail.modPHPMailer\');\\n$modx->mail->reset();\\n$modx->mail->set(modMail::MAIL_BODY,$message);\\n$modx->mail->set(modMail::MAIL_FROM,$hook->_process($mailFrom,$placeholders));\\n$modx->mail->set(modMail::MAIL_FROM_NAME,$hook->_process($mailFromName,$placeholders));\\n$modx->mail->set(modMail::MAIL_SENDER,$hook->_process($mailSender,$placeholders));\\n$modx->mail->set(modMail::MAIL_SUBJECT,$hook->_process($mailSubject,$placeholders));\\n$modx->mail->address(\'to\',$mailTo);\\n$modx->mail->setHTML($isHtml);\\n\\n\\/* add attachments *\\/\\nif($fiarFiles){\\n    $fiarFiles = explode(\',\', $fiarFiles);\\n    foreach($fiarFiles AS $file){\\n        $modx->mail->mailer->AddAttachment($file);\\n    }\\n}\\n\\n\\/* reply to *\\/\\n$emailReplyTo = $modx->getOption(\'fiarReplyTo\',$scriptProperties,$mailFrom);\\n$emailReplyTo = $hook->_process($emailReplyTo,$fields);\\n$emailReplyToName = $modx->getOption(\'fiarReplyToName\',$scriptProperties,$mailFromName);\\n$emailReplyToName = $hook->_process($emailReplyToName,$fields);\\nif (!empty($emailReplyTo)) {\\n    $modx->mail->address(\'reply-to\',$emailReplyTo,$emailReplyToName);\\n}\\n\\n\\/* cc *\\/\\n$emailCC = $modx->getOption(\'fiarCC\',$scriptProperties,\'\');\\nif (!empty($emailCC)) {\\n    $emailCCName = $modx->getOption(\'fiarCCName\',$scriptProperties,\'\');\\n    $emailCC = explode(\',\',$emailCC);\\n    $emailCCName = explode(\',\',$emailCCName);\\n    $numAddresses = count($emailCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailCCName[$i]) ? $emailCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailCC[$i] = $hook->_process($emailCC[$i],$fields);\\n        if (!empty($emailCC[$i])) {\\n            $modx->mail->address(\'cc\',$emailCC[$i],$etn);\\n        }\\n    }\\n}\\n\\n\\/* bcc *\\/\\n$emailBCC = $modx->getOption(\'fiarBCC\',$scriptProperties,\'\');\\nif (!empty($emailBCC)) {\\n    $emailBCCName = $modx->getOption(\'fiarBCCName\',$scriptProperties,\'\');\\n    $emailBCC = explode(\',\',$emailBCC);\\n    $emailBCCName = explode(\',\',$emailBCCName);\\n    $numAddresses = count($emailBCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailBCCName[$i]) ? $emailBCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailBCC[$i] = $hook->_process($emailBCC[$i],$fields);\\n        if (!empty($emailBCC[$i])) {\\n            $modx->mail->address(\'bcc\',$emailBCC[$i],$etn);\\n        }\\n    }\\n}\\n\\nif (!$formit->inTestMode) {\\n    if (!$modx->mail->send()) {\\n        $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] An error occurred while trying to send the auto-responder email: \'.$modx->mail->mailer->ErrorInfo);\\n        return false;\\n    }\\n}\\n$modx->mail->reset();\\nreturn true;","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for auto-responders.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$tpl = $modx->getOption(\'fiarTpl\',$scriptProperties,\'fiarTpl\');\\n$mailFrom = $modx->getOption(\'fiarFrom\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailFromName = $modx->getOption(\'fiarFromName\',$scriptProperties,$modx->getOption(\'site_name\'));\\n$mailSender = $modx->getOption(\'fiarSender\',$scriptProperties,$modx->getOption(\'emailsender\'));\\n$mailSubject = $modx->getOption(\'fiarSubject\',$scriptProperties,\'[[++site_name]] Auto-Responder\');\\n$mailSubject = str_replace(array(\'[[++site_name]]\',\'[[++emailsender]]\'),array($modx->getOption(\'site_name\'),$modx->getOption(\'emailsender\')),$mailSubject);\\n$fiarFiles = $modx->getOption(\'fiarFiles\',$scriptProperties,false);\\n$isHtml = $modx->getOption(\'fiarHtml\',$scriptProperties,true);\\n$toField = $modx->getOption(\'fiarToField\',$scriptProperties,\'email\');\\n$multiSeparator = $modx->getOption(\'fiarMultiSeparator\',$formit->config,\\"\\\\n\\");\\n$multiWrapper = $modx->getOption(\'fiarMultiWrapper\',$formit->config,\\"[[+value]]\\");\\nif (empty($fields[$toField])) {\\n    $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] Auto-responder could not find field `\'.$toField.\'` in form submission.\');\\n    return false;\\n}\\n\\n\\/* handle checkbox and array fields *\\/\\nforeach ($fields as $k => &$v) {\\n    if (is_array($v) && !empty($v[\'name\']) && isset($v[\'error\']) && $v[\'error\'] == UPLOAD_ERR_OK) {\\n        $fields[$k] = $v[\'name\'];\\n    } else if (is_array($v)) {\\n        $vOpts = array();\\n        foreach ($v as $vKey => $vValue) {\\n            if (is_string($vKey) && !empty($vKey)) {\\n                $vKey = $k.\'.\'.$vKey;\\n                $fields[$vKey] = $vValue;\\n            } else {\\n                $vOpts[] = str_replace(\'[[+value]]\',$vValue,$multiWrapper);\\n            }\\n        }\\n        $newValue = implode($multiSeparator,$vOpts);\\n        if (!empty($vOpts)) {\\n            $fields[$k] = $newValue;\\n        }\\n    }\\n}\\n\\n\\/* setup placeholders *\\/\\n$placeholders = $fields;\\n$mailTo= $fields[$toField];\\n\\n$message = $formit->getChunk($tpl,$placeholders);\\n$modx->parser->processElementTags(\'\',$message,true,false);\\n\\n$modx->getService(\'mail\', \'mail.modPHPMailer\');\\n$modx->mail->reset();\\n$modx->mail->set(modMail::MAIL_BODY,$message);\\n$modx->mail->set(modMail::MAIL_FROM,$hook->_process($mailFrom,$placeholders));\\n$modx->mail->set(modMail::MAIL_FROM_NAME,$hook->_process($mailFromName,$placeholders));\\n$modx->mail->set(modMail::MAIL_SENDER,$hook->_process($mailSender,$placeholders));\\n$modx->mail->set(modMail::MAIL_SUBJECT,$hook->_process($mailSubject,$placeholders));\\n$modx->mail->address(\'to\',$mailTo);\\n$modx->mail->setHTML($isHtml);\\n\\n\\/* add attachments *\\/\\nif($fiarFiles){\\n    $fiarFiles = explode(\',\', $fiarFiles);\\n    foreach($fiarFiles AS $file){\\n        $modx->mail->mailer->AddAttachment($file);\\n    }\\n}\\n\\n\\/* reply to *\\/\\n$emailReplyTo = $modx->getOption(\'fiarReplyTo\',$scriptProperties,$mailFrom);\\n$emailReplyTo = $hook->_process($emailReplyTo,$fields);\\n$emailReplyToName = $modx->getOption(\'fiarReplyToName\',$scriptProperties,$mailFromName);\\n$emailReplyToName = $hook->_process($emailReplyToName,$fields);\\nif (!empty($emailReplyTo)) {\\n    $modx->mail->address(\'reply-to\',$emailReplyTo,$emailReplyToName);\\n}\\n\\n\\/* cc *\\/\\n$emailCC = $modx->getOption(\'fiarCC\',$scriptProperties,\'\');\\nif (!empty($emailCC)) {\\n    $emailCCName = $modx->getOption(\'fiarCCName\',$scriptProperties,\'\');\\n    $emailCC = explode(\',\',$emailCC);\\n    $emailCCName = explode(\',\',$emailCCName);\\n    $numAddresses = count($emailCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailCCName[$i]) ? $emailCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailCC[$i] = $hook->_process($emailCC[$i],$fields);\\n        if (!empty($emailCC[$i])) {\\n            $modx->mail->address(\'cc\',$emailCC[$i],$etn);\\n        }\\n    }\\n}\\n\\n\\/* bcc *\\/\\n$emailBCC = $modx->getOption(\'fiarBCC\',$scriptProperties,\'\');\\nif (!empty($emailBCC)) {\\n    $emailBCCName = $modx->getOption(\'fiarBCCName\',$scriptProperties,\'\');\\n    $emailBCC = explode(\',\',$emailBCC);\\n    $emailBCCName = explode(\',\',$emailBCCName);\\n    $numAddresses = count($emailBCC);\\n    for ($i=0;$i<$numAddresses;$i++) {\\n        $etn = !empty($emailBCCName[$i]) ? $emailBCCName[$i] : \'\';\\n        if (!empty($etn)) $etn = $hook->_process($etn,$fields);\\n        $emailBCC[$i] = $hook->_process($emailBCC[$i],$fields);\\n        if (!empty($emailBCC[$i])) {\\n            $modx->mail->address(\'bcc\',$emailBCC[$i],$etn);\\n        }\\n    }\\n}\\n\\nif (!$formit->inTestMode) {\\n    if (!$modx->mail->send()) {\\n        $modx->log(modX::LOG_LEVEL_ERROR,\'[FormIt] An error occurred while trying to send the auto-responder email: \'.$modx->mail->mailer->ErrorInfo);\\n        return false;\\n    }\\n}\\n$modx->mail->reset();\\nreturn true;"}',
        'guid' => 'df2d3f04e54d1973b673bdfc60184b8f',
        'native_key' => 1,
        'signature' => '2759b90ffd539a207a6ee8732430b5e9',
      ),
      '7ee64c7acc0b5ead2ccccc65251cf5fc' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":2,"source":0,"property_preprocess":0,"name":"FormItRetriever","description":"Fetches a form submission for a user for displaying on a thank you page.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Retrieves a prior form submission that was stored with the &store property\\n * in a FormIt call.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * \\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/* setup properties *\\/\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'fi.\');\\n$eraseOnLoad = $modx->getOption(\'eraseOnLoad\',$scriptProperties,false);\\n$redirectToOnNotFound = $modx->getOption(\'redirectToOnNotFound\',$scriptProperties,false);\\n\\n\\/* fetch data from cache and set to placeholders *\\/\\n$fi->loadRequest();\\n$fi->request->loadDictionary();\\n$data = $fi->request->dictionary->retrieve();\\nif (!empty($data)) {\\n    \\/* set data to placeholders *\\/\\n    foreach ($data as $k=>$v) {\\n        \\/*checkboxes & other multi-values are stored as arrays, must be imploded*\\/\\n        if (is_array($v)) {\\n            $data[$k] = implode(\',\',$v);\\n        }\\n    }\\n    $modx->toPlaceholders($data,$placeholderPrefix,\'\');\\n    \\n    \\/* if set, erase the data on load, otherwise depend on cache expiry time *\\/\\n    if ($eraseOnLoad) {\\n        $fi->request->dictionary->erase();\\n    }\\n\\/* if the data\'s not found, and we want to redirect somewhere if so, do here *\\/\\n} else if (!empty($redirectToOnNotFound)) {\\n    $url = $modx->makeUrl($redirectToOnNotFound);\\n    $modx->sendRedirect($url);\\n}\\nreturn \'\';","locked":0,"properties":"a:3:{s:17:\\"placeholderPrefix\\";a:7:{s:4:\\"name\\";s:17:\\"placeholderPrefix\\";s:4:\\"desc\\";s:31:\\"prop_fir.placeholderprefix_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:3:\\"fi.\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"redirectToOnNotFound\\";a:7:{s:4:\\"name\\";s:20:\\"redirectToOnNotFound\\";s:4:\\"desc\\";s:34:\\"prop_fir.redirecttoonnotfound_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"eraseOnLoad\\";a:7:{s:4:\\"name\\";s:11:\\"eraseOnLoad\\";s:4:\\"desc\\";s:25:\\"prop_fir.eraseonload_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:0;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Retrieves a prior form submission that was stored with the &store property\\n * in a FormIt call.\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * \\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/* setup properties *\\/\\n$placeholderPrefix = $modx->getOption(\'placeholderPrefix\',$scriptProperties,\'fi.\');\\n$eraseOnLoad = $modx->getOption(\'eraseOnLoad\',$scriptProperties,false);\\n$redirectToOnNotFound = $modx->getOption(\'redirectToOnNotFound\',$scriptProperties,false);\\n\\n\\/* fetch data from cache and set to placeholders *\\/\\n$fi->loadRequest();\\n$fi->request->loadDictionary();\\n$data = $fi->request->dictionary->retrieve();\\nif (!empty($data)) {\\n    \\/* set data to placeholders *\\/\\n    foreach ($data as $k=>$v) {\\n        \\/*checkboxes & other multi-values are stored as arrays, must be imploded*\\/\\n        if (is_array($v)) {\\n            $data[$k] = implode(\',\',$v);\\n        }\\n    }\\n    $modx->toPlaceholders($data,$placeholderPrefix,\'\');\\n    \\n    \\/* if set, erase the data on load, otherwise depend on cache expiry time *\\/\\n    if ($eraseOnLoad) {\\n        $fi->request->dictionary->erase();\\n    }\\n\\/* if the data\'s not found, and we want to redirect somewhere if so, do here *\\/\\n} else if (!empty($redirectToOnNotFound)) {\\n    $url = $modx->makeUrl($redirectToOnNotFound);\\n    $modx->sendRedirect($url);\\n}\\nreturn \'\';"}',
        'guid' => 'fa09a611f53a719a9a7ede420539af8d',
        'native_key' => 2,
        'signature' => 'c36ab9d28ce650eebd58aa7529a3bda4',
      ),
      '815289a8c71401d42fed168783cb0ab3' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":3,"source":0,"property_preprocess":0,"name":"FormItIsChecked","description":"A custom output filter used with checkboxes\\/radios for checking checked status.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' checked=\\"checked\\"\';\\n}\\n$input = $modx->fromJSON($input);\\nif (!empty($input) && is_array($input) && in_array($options,$input)) {\\n  $output = \' checked=\\"checked\\"\';\\n}\\nreturn $output;","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' checked=\\"checked\\"\';\\n}\\n$input = $modx->fromJSON($input);\\nif (!empty($input) && is_array($input) && in_array($options,$input)) {\\n  $output = \' checked=\\"checked\\"\';\\n}\\nreturn $output;"}',
        'guid' => '01543370aec9ac4a9a783b4739e346ff',
        'native_key' => 3,
        'signature' => 'd668f74fc7dc9323e32d6bf42f5e9fb6',
      ),
      'efe46d341f20743dbbb82dfa720ede57' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":4,"source":0,"property_preprocess":0,"name":"FormItIsSelected","description":"A custom output filter used with dropdowns for checking selected status.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' selected=\\"selected\\"\';\\n}\\n$input = $modx->fromJSON($input);\\nif(is_array($input)){\\n    if (!empty($input) && is_array($input) && in_array($options,$input)) {\\n      $output = \' selected=\\"selected\\"\';\\n    }\\n}\\nreturn $output;","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Custom output filter that returns checked=\\"checked\\" if the value is set\\n *\\n * @var string $input\\n * @var string $options\\n * @package formit\\n *\\/\\n$output = \' \';\\nif ($input == $options) {\\n    $output = \' selected=\\"selected\\"\';\\n}\\n$input = $modx->fromJSON($input);\\nif(is_array($input)){\\n    if (!empty($input) && is_array($input) && in_array($options,$input)) {\\n      $output = \' selected=\\"selected\\"\';\\n    }\\n}\\nreturn $output;"}',
        'guid' => '0eda0c003d54591ddbb8feb40b061172',
        'native_key' => 4,
        'signature' => '57e43b45069602d7b6399750f6d0cb57',
      ),
      '0430433b934602b1847ccea9f85fa923' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":5,"source":0,"property_preprocess":0,"name":"FormItCountryOptions","description":"A utility snippet for generating a dropdown list of countries.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Automatically generates and outputs a country list for usage in forms\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/** @var fiCountryOptions $co *\\/\\n$co = $fi->loadModule(\'fiCountryOptions\',\'countryOptions\',$scriptProperties);\\n$co->initialize();\\n$co->getData();\\n$co->loadPrioritized();\\n$co->iterate();\\nreturn $co->output();","locked":0,"properties":"a:10:{s:8:\\"selected\\";a:7:{s:4:\\"name\\";s:8:\\"selected\\";s:4:\\"desc\\";s:23:\\"prop_fico.selected_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:18:\\"prop_fico.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"option\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:10:\\"useIsoCode\\";a:7:{s:4:\\"name\\";s:10:\\"useIsoCode\\";s:4:\\"desc\\";s:25:\\"prop_fico.useisocode_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"prioritized\\";a:7:{s:4:\\"name\\";s:11:\\"prioritized\\";s:4:\\"desc\\";s:26:\\"prop_fico.prioritized_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:11:\\"optGroupTpl\\";a:7:{s:4:\\"name\\";s:11:\\"optGroupTpl\\";s:4:\\"desc\\";s:26:\\"prop_fico.optgrouptpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:8:\\"optgroup\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:20:\\"prioritizedGroupText\\";a:7:{s:4:\\"name\\";s:20:\\"prioritizedGroupText\\";s:4:\\"desc\\";s:35:\\"prop_fico.prioritizedgrouptext_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:12:\\"allGroupText\\";a:7:{s:4:\\"name\\";s:12:\\"allGroupText\\";s:4:\\"desc\\";s:27:\\"prop_fico.allgrouptext_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"selectedAttribute\\";a:7:{s:4:\\"name\\";s:17:\\"selectedAttribute\\";s:4:\\"desc\\";s:32:\\"prop_fico.selectedattribute_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:20:\\" selected=\\"selected\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:28:\\"prop_fico.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"country\\";a:7:{s:4:\\"name\\";s:7:\\"country\\";s:4:\\"desc\\";s:22:\\"prop_fico.country_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:16:\\"[[++cultureKey]]\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Automatically generates and outputs a country list for usage in forms\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/** @var fiCountryOptions $co *\\/\\n$co = $fi->loadModule(\'fiCountryOptions\',\'countryOptions\',$scriptProperties);\\n$co->initialize();\\n$co->getData();\\n$co->loadPrioritized();\\n$co->iterate();\\nreturn $co->output();"}',
        'guid' => 'd824f43f8180a43d07874642d9b0a7ad',
        'native_key' => 5,
        'signature' => '2147644423cd29e283695635dda26a7f',
      ),
      '2274a3465d6b6fa5ec813ba304838c7a' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":6,"source":0,"property_preprocess":0,"name":"FormItStateOptions","description":"A utility snippet for generating a dropdown list of U.S. states.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Automatically generates and outputs a U.S. state list for usage in forms\\n * \\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/** @var fiStateOptions $so *\\/\\n$so = $fi->loadModule(\'fiStateOptions\',\'stateOptions\',$scriptProperties);\\n$so->initialize();\\n$so->getData();\\n$so->iterate();\\nreturn $so->output();","locked":0,"properties":"a:6:{s:8:\\"selected\\";a:7:{s:4:\\"name\\";s:8:\\"selected\\";s:4:\\"desc\\";s:23:\\"prop_fiso.selected_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:3:\\"tpl\\";a:7:{s:4:\\"name\\";s:3:\\"tpl\\";s:4:\\"desc\\";s:18:\\"prop_fiso.tpl_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:6:\\"option\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"useAbbr\\";a:7:{s:4:\\"name\\";s:7:\\"useAbbr\\";s:4:\\"desc\\";s:22:\\"prop_fiso.useabbr_desc\\";s:4:\\"type\\";s:13:\\"combo-boolean\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";b:1;s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:17:\\"selectedAttribute\\";a:7:{s:4:\\"name\\";s:17:\\"selectedAttribute\\";s:4:\\"desc\\";s:32:\\"prop_fiso.selectedattribute_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:20:\\" selected=\\"selected\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:7:\\"country\\";a:7:{s:4:\\"name\\";s:7:\\"country\\";s:4:\\"desc\\";s:22:\\"prop_fiso.country_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:16:\\"[[++cultureKey]]\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}s:13:\\"toPlaceholder\\";a:7:{s:4:\\"name\\";s:13:\\"toPlaceholder\\";s:4:\\"desc\\";s:28:\\"prop_fiso.toplaceholder_desc\\";s:4:\\"type\\";s:9:\\"textfield\\";s:7:\\"options\\";s:0:\\"\\";s:5:\\"value\\";s:0:\\"\\";s:7:\\"lexicon\\";s:17:\\"formit:properties\\";s:4:\\"area\\";s:0:\\"\\";}}","moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2009-2012 by Shaun McCormick <shaun@modx.com>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * Automatically generates and outputs a U.S. state list for usage in forms\\n * \\n * @package formit\\n *\\/\\nrequire_once $modx->getOption(\'formit.core_path\',null,$modx->getOption(\'core_path\').\'components\\/formit\\/\').\'model\\/formit\\/formit.class.php\';\\n$fi = new FormIt($modx,$scriptProperties);\\n\\n\\/** @var fiStateOptions $so *\\/\\n$so = $fi->loadModule(\'fiStateOptions\',\'stateOptions\',$scriptProperties);\\n$so->initialize();\\n$so->getData();\\n$so->iterate();\\nreturn $so->output();"}',
        'guid' => 'ec3d87e602454da906f6448c96c10562',
        'native_key' => 6,
        'signature' => '0bba175906546cd1b5a3cdc7a53e5559',
      ),
      '14c297f5d5204a454f23675e94204644' => 
      array (
        'preserve_keys' => false,
        'update_object' => true,
        'unique_key' => 'name',
        'class' => 'modSnippet',
        'object' => '{"id":7,"source":0,"property_preprocess":0,"name":"FormItSaveForm","description":"Save any form and export them to csv.","editor_type":0,"category":0,"cache_type":0,"snippet":"\\/**\\n * FormIt\\n *\\n * Copyright 2011-12 by SCHERP Ontwikkeling <info@scherpontwikkeling.nl>\\n * Copyright 2015 by Wieger Sloot <modx@sterc.nl>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for saving filled-in forms. - Based on FormSave\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$values = $hook->getValues();\\n$formName = $modx->getOption(\'formName\', $formit->config, \'form-\'.$modx->resource->get(\'id\'));\\n$formEncrypt = $modx->getOption(\'formEncrypt\', $formit->config, false);\\n$formFields = $modx->getOption(\'formFields\', $formit->config, false);\\n$fieldNames = $modx->getOption(\'fieldNames\', $formit->config, false);\\nif ($formFields) {\\n    $formFields = explode(\',\', $formFields);\\n    foreach($formFields as $k => $v) {\\n        $formFields[$k] = trim($v);\\n    }\\n}\\n\\/\\/ Build the data array\\n$dataArray = array();\\nif($formFields){\\n    foreach($formFields as $field) {\\n        $dataArray[$field] = (!isset($values[$field])) ? \'\' : $values[$field];\\n    }\\n}else{\\n    $dataArray = $values;\\n}\\n\\/\\/Change the fieldnames\\nif($fieldNames){\\n    $newDataArray = array();\\n    $fieldLabels = array();\\n    $formFieldNames = explode(\',\', $fieldNames);\\n    foreach($formFieldNames as $formFieldName){\\n        list($name, $label) = explode(\'==\', $formFieldName);\\n        $fieldLabels[trim($name)] = trim($label);\\n    }\\n    foreach ($dataArray as $key => $value) {\\n        if($fieldLabels[$key]){\\n            $newDataArray[$fieldLabels[$key]] = $value;\\n        }else{\\n            $newDataArray[$key] = $value;\\n        }\\n    }\\n    $dataArray = $newDataArray;\\n}\\n\\/\\/ Create obj\\n$newForm = $modx->newObject(\'FormItForm\');\\nif($formEncrypt){\\n    $dataArray = $newForm->encrypt($modx->toJSON($dataArray));\\n}else{\\n    $dataArray = $modx->toJSON($dataArray);\\n}\\n$newForm->fromArray(array(\\n    \'form\' => $formName,\\n    \'date\' => time(),\\n    \'values\' => $dataArray,\\n    \'ip\' => $modx->getOption(\'REMOTE_ADDR\', $_SERVER, \'\'),\\n    \'context_key\' => $modx->resource->get(\'context_key\'),\\n    \'encrypted\' => $formEncrypt\\n));\\n\\nif (!$newForm->save()) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'[FormItSaveForm] An error occurred while trying to save the submitted form: \' . print_r($newForm->toArray(), true));\\n    return false;\\n}\\n$hook->setValue(\'savedForm\', $newForm->toArray());\\nreturn true;","locked":0,"properties":null,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * FormIt\\n *\\n * Copyright 2011-12 by SCHERP Ontwikkeling <info@scherpontwikkeling.nl>\\n * Copyright 2015 by Wieger Sloot <modx@sterc.nl>\\n *\\n * FormIt is free software; you can redistribute it and\\/or modify it\\n * under the terms of the GNU General Public License as published by the Free\\n * Software Foundation; either version 2 of the License, or (at your option) any\\n * later version.\\n *\\n * FormIt is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * FormIt; if not, write to the Free Software Foundation, Inc., 59 Temple Place,\\n * Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @package formit\\n *\\/\\n\\/**\\n * A custom FormIt hook for saving filled-in forms. - Based on FormSave\\n *\\n * @var modX $modx\\n * @var array $scriptProperties\\n * @var FormIt $formit\\n * @var fiHooks $hook\\n * \\n * @package formit\\n *\\/\\n\\/* setup default properties *\\/\\n$values = $hook->getValues();\\n$formName = $modx->getOption(\'formName\', $formit->config, \'form-\'.$modx->resource->get(\'id\'));\\n$formEncrypt = $modx->getOption(\'formEncrypt\', $formit->config, false);\\n$formFields = $modx->getOption(\'formFields\', $formit->config, false);\\n$fieldNames = $modx->getOption(\'fieldNames\', $formit->config, false);\\nif ($formFields) {\\n    $formFields = explode(\',\', $formFields);\\n    foreach($formFields as $k => $v) {\\n        $formFields[$k] = trim($v);\\n    }\\n}\\n\\/\\/ Build the data array\\n$dataArray = array();\\nif($formFields){\\n    foreach($formFields as $field) {\\n        $dataArray[$field] = (!isset($values[$field])) ? \'\' : $values[$field];\\n    }\\n}else{\\n    $dataArray = $values;\\n}\\n\\/\\/Change the fieldnames\\nif($fieldNames){\\n    $newDataArray = array();\\n    $fieldLabels = array();\\n    $formFieldNames = explode(\',\', $fieldNames);\\n    foreach($formFieldNames as $formFieldName){\\n        list($name, $label) = explode(\'==\', $formFieldName);\\n        $fieldLabels[trim($name)] = trim($label);\\n    }\\n    foreach ($dataArray as $key => $value) {\\n        if($fieldLabels[$key]){\\n            $newDataArray[$fieldLabels[$key]] = $value;\\n        }else{\\n            $newDataArray[$key] = $value;\\n        }\\n    }\\n    $dataArray = $newDataArray;\\n}\\n\\/\\/ Create obj\\n$newForm = $modx->newObject(\'FormItForm\');\\nif($formEncrypt){\\n    $dataArray = $newForm->encrypt($modx->toJSON($dataArray));\\n}else{\\n    $dataArray = $modx->toJSON($dataArray);\\n}\\n$newForm->fromArray(array(\\n    \'form\' => $formName,\\n    \'date\' => time(),\\n    \'values\' => $dataArray,\\n    \'ip\' => $modx->getOption(\'REMOTE_ADDR\', $_SERVER, \'\'),\\n    \'context_key\' => $modx->resource->get(\'context_key\'),\\n    \'encrypted\' => $formEncrypt\\n));\\n\\nif (!$newForm->save()) {\\n    $modx->log(modX::LOG_LEVEL_ERROR, \'[FormItSaveForm] An error occurred while trying to save the submitted form: \' . print_r($newForm->toArray(), true));\\n    return false;\\n}\\n$hook->setValue(\'savedForm\', $newForm->toArray());\\nreturn true;"}',
        'guid' => '93615e2b573e243fcd906c1f3da5da3f',
        'native_key' => 7,
        'signature' => '1820b9dfd5a78894e34aad5710a08de1',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'Children' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'category',
      'related_objects' => true,
      'related_object_attributes' => 
      array (
        'Snippets' => 
        array (
          'preserve_keys' => false,
          'update_object' => true,
          'unique_key' => 'name',
        ),
        'Chunks' => 
        array (
          'preserve_keys' => false,
          'update_object' => true,
          'unique_key' => 'name',
        ),
      ),
    ),
    'Snippets' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
    'Chunks' => 
    array (
      'preserve_keys' => false,
      'update_object' => true,
      'unique_key' => 'name',
    ),
  ),
  'namespace' => 'formit',
  'resolve' => 
  array (
    0 => 
    array (
      'type' => 'file',
      'body' => '{"source":"formit-2.2.7-pl\\/modCategory\\/4d136c5343bc6b509d1dc88ea714ebaf\\/0\\/","target":"return MODX_CORE_PATH . \'components\\/\';","name":"formit"}',
    ),
    1 => 
    array (
      'type' => 'file',
      'body' => '{"source":"formit-2.2.7-pl\\/modCategory\\/4d136c5343bc6b509d1dc88ea714ebaf\\/1\\/","target":"return MODX_ASSETS_PATH . \'components\\/\';","name":"formit"}',
    ),
  ),
  'validate' => NULL,
  'vehicle_package' => 'transport',
  'vehicle_class' => 'xPDOObjectVehicle',
  'guid' => '20dd40cbd7bfa9ec72d3d4166e330505',
  'package' => 'modx',
  'class' => 'modCategory',
  'signature' => '4d136c5343bc6b509d1dc88ea714ebaf',
  'native_key' => 1,
  'object' => '{"id":1,"parent":0,"category":"FormIt"}',
);